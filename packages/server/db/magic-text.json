{
  "id": "magic-text",
  "name": "Magic Text",
  "description": "Simple animated text component that reveals as we scroll down the page.",
  "framework": "react",
  "library": "hextaui",
  "tags": [
    "animated",
    "animation",
    "component",
    "down",
    "magic",
    "page",
    "reveals",
    "scroll",
    "simple",
    "text",
    "that"
  ],
  "code": "// Path: ui/magic-text.tsx\n\n\"use client\" \r\n\r\nimport * as React from \"react\"\r\n \r\nimport { motion, useScroll, useTransform } from \"motion/react\";\r\nimport { useRef } from \"react\";\r\n \r\nexport interface MagicTextProps {\r\n  text: string;\r\n}\r\n \r\ninterface WordProps {\r\n  children: string;\r\n  progress: any;\r\n  range: number[];\r\n}\r\n \r\nconst Word: React.FC<WordProps> = ({ children, progress, range }) => {\r\n  const opacity = useTransform(progress, range, [0, 1]);\r\n \r\n  return (\r\n    <span className=\"relative mt-[12px] mr-1 text-3xl font-semibold\">\r\n      <span className=\"absolute opacity-20\">{children}</span>\r\n      <motion.span style={{ opacity: opacity }}>{children}</motion.span>\r\n    </span>\r\n  );\r\n};\r\n \r\nexport const MagicText: React.FC<MagicTextProps> = ({ text }) => {\r\n  const container = useRef(null);\r\n \r\n  const { scrollYProgress } = useScroll({\r\n    target: container,\r\n \r\n    offset: [\"start 0.9\", \"start 0.25\"],\r\n  });\r\n  text;\r\n  const words = text.split(\" \");\r\n \r\n  return (\r\n    <p ref={container} className=\"flex flex-wrap leading-[0.5] p-4\">\r\n      {words.map((word, i) => {\r\n        const start = i / words.length;\r\n \r\n        const end = start + 1 / words.length;\r\n \r\n        return (\r\n          <Word key={i} progress={scrollYProgress} range={[start, end]}>\r\n            {word}\r\n          </Word>\r\n        );\r\n      })}\r\n    </p>\r\n  );\r\n};",
  "createdAt": "2025-06-12T15:33:41.346Z",
  "updatedAt": "2025-06-12T15:33:41.346Z"
}