{
  "id": "password-strength-meter",
  "name": "Password Strength Meter",
  "description": "Visual indicator for password strength with validation criteria.",
  "framework": "react",
  "library": "hextaui",
  "tags": [
    "application",
    "criteria",
    "indicator",
    "meter",
    "password",
    "strength",
    "validation",
    "visual"
  ],
  "code": "// Path: ui/password-strength-meter.tsx\n\n\"use client\" \r\n\r\nimport * as React from \"react\"\r\nimport { useEffect, useState, useMemo } from \"react\";\r\nimport { cn } from \"@/utils\";\r\n\r\nexport interface PasswordStrengthMeterProps {\r\n  password: string;\r\n  minLength?: number;\r\n  className?: string;\r\n  barClassName?: string;\r\n  criteriaClassName?: string;\r\n  colors?: string[];\r\n  levels?: number;\r\n  customRequirements?: {\r\n    label: string;\r\n    test: (pass: string) => boolean;\r\n  }[];\r\n}\r\n\r\nexport function PasswordStrengthMeter({\r\n  password,\r\n  minLength = 8,\r\n  className,\r\n  barClassName,\r\n  criteriaClassName,\r\n  colors = [\"#dc2626\", \"#ea580c\", \"#16a34a\", \"#15803d\"],\r\n  levels = 4,\r\n  customRequirements,\r\n}: PasswordStrengthMeterProps) {\r\n  const [strength, setStrength] = useState(0);\r\n  const [requirementsMet, setRequirementsMet] = useState<boolean[]>([]);\r\n\r\n  const defaultRequirements = useMemo(\r\n    () => [\r\n      {\r\n        label: `At least ${minLength} characters`,\r\n        test: (pass: string) => pass.length >= minLength,\r\n      },\r\n      {\r\n        label: \"Contains uppercase letter\",\r\n        test: (pass: string) => /[A-Z]/.test(pass),\r\n      },\r\n      {\r\n        label: \"Contains number\",\r\n        test: (pass: string) => /[0-9]/.test(pass),\r\n      },\r\n      {\r\n        label: \"Contains special character\",\r\n        test: (pass: string) => /[^A-Za-z0-9]/.test(pass),\r\n      },\r\n    ],\r\n    [minLength]\r\n  );\r\n\r\n  const requirements = customRequirements ?? defaultRequirements;\r\n\r\n  useEffect(() => {\r\n    const met = requirements.map((req) => req.test(password));\r\n    setRequirementsMet(met);\r\n\r\n    const metCount = met.filter(Boolean).length;\r\n    const level = Math.min(\r\n      Math.floor((metCount / requirements.length) * levels),\r\n      levels\r\n    );\r\n    setStrength(level);\r\n  }, [password, requirements, levels]);\r\n\r\n  return (\r\n    <div\r\n      className={cn(\"space-y-3\", className)}\r\n      role=\"region\"\r\n      aria-label=\"Password strength meter\"\r\n    >\r\n      {/* Strength Bar */}\r\n      <div className={cn(\"flex gap-1\", barClassName)}>\r\n        {Array.from({ length: levels }).map((_, i) => (\r\n          <div\r\n            key={i}\r\n            className=\"h-2 flex-1 rounded-full bg-muted transition-all\"\r\n            style={{\r\n              backgroundColor:\r\n                i < strength ? colors[strength - 1] : \"#00000010\",\r\n            }}\r\n            aria-hidden=\"true\"\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Criteria List */}\r\n      <div\r\n        className={cn(\"text-sm text-muted-foreground pt-2\", criteriaClassName)}\r\n      >\r\n        {requirements.map((req, i) => (\r\n          <div\r\n            key={req.label}\r\n            className={cn(\r\n              \"flex items-center gap-2\",\r\n              requirementsMet[i] && \"text-green-600\"\r\n            )}\r\n          >\r\n            <span className=\"text-xs\">â€¢</span>\r\n            {req.label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const PasswordStrengthMeterExample: React.FC = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-4 max-w-xl w-full bg-background border border-primary/10 p-4 rounded-3xl shadow-2xl/10\">\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        className=\"w-full px-3 py-2 border rounded-xl focus:outline-fd-foreground/30\"\r\n        placeholder=\"Enter your password\"\r\n      />\r\n      <PasswordStrengthMeter password={password} />\r\n    </div>\r\n  );\r\n};",
  "createdAt": "2025-06-12T15:33:50.218Z",
  "updatedAt": "2025-06-12T15:33:50.218Z"
}