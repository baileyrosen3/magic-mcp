{
  "id": "gradient-bars",
  "name": "Gradient Bars",
  "description": "Animated background with vertical gradient bars that pulse in a wave-like motion.",
  "framework": "react",
  "library": "berlix",
  "tags": [
    "animated",
    "background",
    "bars",
    "gradient",
    "like",
    "motion",
    "pulse",
    "that",
    "vertical",
    "wave"
  ],
  "code": "// Path: ui/gradient-bars.tsx\n\n\"use client\";\n\nimport { motion } from \"motion/react\";\n\ninterface GradientBarsProps {\n  bars?: number;\n  colors?: string[];\n}\n\nexport const GradientBars = ({\n  bars = 20,\n  colors = [\"#8f0feb\", \"transparent\"],\n}: GradientBarsProps) => {\n  const gradientStyle = `linear-gradient(to top, ${colors.join(\", \")})`;\n  return (\n    <div className=\"absolute inset-0 z-0 overflow-hidden\">\n      <div className=\"flex h-full w-full\">\n        {Array.from({ length: bars }).map((_, index) => {\n          const position = index / (bars - 1);\n          const center = 0.5;\n          const distance = Math.abs(position - center);\n          const scale = 0.3 + 0.7 * Math.pow(distance * 2, 1.2);\n\n          return (\n            <motion.div\n              key={`bg-bar-${index}`}\n              className=\"flex-1 origin-bottom\"\n              style={{ background: gradientStyle }}\n              animate={{\n                scaleY: [scale, scale + 0.1, scale],\n                opacity: [1, 0.95, 1],\n              }}\n              transition={{\n                duration: 3,\n                ease: \"easeInOut\",\n                repeat: Infinity,\n                repeatType: \"mirror\",\n                delay: index * 0.5,\n              }}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};",
  "createdAt": "2025-06-12T15:30:59.675Z",
  "updatedAt": "2025-06-12T15:30:59.675Z"
}