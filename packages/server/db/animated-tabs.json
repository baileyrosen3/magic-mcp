{
  "id": "animated-tabs",
  "name": "Animated Tabs",
  "description": "Animated Tabs",
  "framework": "react",
  "library": "hextaui",
  "tags": [
    "animated",
    "application",
    "tabs"
  ],
  "code": "// Path: ui/animated-tabs.tsx\n\n\"use client\" \r\n\r\nimport * as React from \"react\"\r\nimport { useEffect, useRef, useState } from \"react\";\r\n \r\nexport interface AnimatedTabsProps {\r\n  tabs: { label: string }[];\r\n}\r\n \r\nexport function AnimatedTabs({ tabs }: AnimatedTabsProps) {\r\n  const [activeTab, setActiveTab] = useState(tabs[0].label);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const activeTabRef = useRef<HTMLButtonElement>(null);\r\n \r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n \r\n    if (container && activeTab) {\r\n      const activeTabElement = activeTabRef.current;\r\n \r\n      if (activeTabElement) {\r\n        const { offsetLeft, offsetWidth } = activeTabElement;\r\n \r\n        const clipLeft = offsetLeft + 16;\r\n        const clipRight = offsetLeft + offsetWidth + 16;\r\n \r\n        container.style.clipPath = `inset(0 ${Number(\r\n          100 - (clipRight / container.offsetWidth) * 100,\r\n        ).toFixed()}% 0 ${Number(\r\n          (clipLeft / container.offsetWidth) * 100,\r\n        ).toFixed()}% round 17px)`;\r\n      }\r\n    }\r\n  }, [activeTab]);\r\n \r\n  return (\r\n    <div className=\"relative bg-secondary/50 border border-primary/10 mx-auto flex w-fit flex-col items-center rounded-full py-2 px-4\">\r\n      <div\r\n        ref={containerRef}\r\n        className=\"absolute z-10 w-full overflow-hidden [clip-path:inset(0px_75%_0px_0%_round_17px)] [transition:clip-path_0.25s_ease]\"\r\n      >\r\n        <div className=\"relative flex w-full justify-center bg-primary\">\r\n          {tabs.map((tab, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => setActiveTab(tab.label)}\r\n              className=\"flex h-8 items-center rounded-full p-3 text-sm font-medium text-primary-foreground\"\r\n              tabIndex={-1}\r\n            >\r\n              {tab.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n \r\n      <div className=\"relative flex w-full justify-center\">\r\n        {tabs.map(({ label }, index) => {\r\n          const isActive = activeTab === label;\r\n \r\n          return (\r\n            <button\r\n              key={index}\r\n              ref={isActive ? activeTabRef : null}\r\n              onClick={() => setActiveTab(label)}\r\n              className=\"flex h-8 items-center cursor-pointer rounded-full p-3 text-sm font-medium text-muted-foreground\"\r\n            >\r\n              {label}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}",
  "createdAt": "2025-06-12T15:19:23.771Z",
  "updatedAt": "2025-06-12T15:19:23.771Z"
}