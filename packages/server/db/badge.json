{
  "id": "badge",
  "name": "Badge",
  "description": "Displays a badge or a component that looks like a badge.",
  "framework": "react",
  "library": "neobrutalism",
  "tags": [
    "badge",
    "component",
    "displays",
    "like",
    "looks",
    "that"
  ],
  "code": "// Path: ui/badge.tsx\n\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport * as React from \"react\"\r\n\r\nimport { cn } from \"@/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-base border-2 border-border px-2.5 py-0.5 text-xs font-base w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] overflow-hidden\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-main text-main-foreground\",\r\n        neutral: \"bg-secondary-background text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  },\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"span\"> &\r\n  VariantProps<typeof badgeVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"span\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"badge\"\r\n      className={cn(badgeVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }",
  "createdAt": "2025-06-12T15:54:45.451Z",
  "updatedAt": "2025-06-12T15:54:45.451Z"
}