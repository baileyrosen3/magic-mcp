{
  "id": "transition-panel",
  "name": "Transition Panel",
  "description": "Easy way to switch between different pieces of content with enter and exit animations. It's perfect for enhancing user experience in areas such as onboarding card, settings adjustments, or any interactive content that requires a visual transition between states.",
  "framework": "react",
  "library": "motion-primitives",
  "tags": [
    "adjustments",
    "animations",
    "any",
    "areas",
    "between",
    "card",
    "content",
    "different",
    "easy",
    "enhancing",
    "enter",
    "exit",
    "experience",
    "interactive",
    "onboarding",
    "panel",
    "perfect",
    "pieces",
    "requires",
    "settings",
    "states",
    "such",
    "switch",
    "that",
    "transition",
    "user",
    "visual",
    "way"
  ],
  "code": "// Path: ui/transition-panel.tsx\n\n'use client';\nimport {\n  AnimatePresence,\n  Transition,\n  Variant,\n  motion,\n  MotionProps,\n} from 'motion/react';\nimport { cn } from '@/utils';\n\nexport type TransitionPanelProps = {\n  children: React.ReactNode[];\n  className?: string;\n  transition?: Transition;\n  activeIndex: number;\n  variants?: { enter: Variant; center: Variant; exit: Variant };\n} & MotionProps;\n\nexport function TransitionPanel({\n  children,\n  className,\n  transition,\n  variants,\n  activeIndex,\n  ...motionProps\n}: TransitionPanelProps) {\n  return (\n    <div className={cn('relative', className)}>\n      <AnimatePresence\n        initial={false}\n        mode='popLayout'\n        custom={motionProps.custom}\n      >\n        <motion.div\n          key={activeIndex}\n          variants={variants}\n          transition={transition}\n          initial='enter'\n          animate='center'\n          exit='exit'\n          {...motionProps}\n        >\n          {children[activeIndex]}\n        </motion.div>\n      </AnimatePresence>\n    </div>\n  );\n}",
  "createdAt": "2025-06-12T15:40:01.865Z",
  "updatedAt": "2025-06-12T15:40:01.865Z"
}