{
  "id": "file-upload",
  "name": "File Upload",
  "description": "Interactive and animated file upload component with drag-and-drop and progress animations.",
  "framework": "react",
  "library": "hextaui",
  "tags": [
    "animated",
    "animations",
    "application",
    "component",
    "drag",
    "drop",
    "file",
    "interactive",
    "progress",
    "upload"
  ],
  "code": "// Path: ui/file-upload.tsx\n\n\"use client\";\r\n \r\nimport { useState, useRef, DragEvent, ChangeEvent } from \"react\";\r\nimport { motion, AnimatePresence } from \"motion/react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  UploadCloud,\r\n  File as FileIcon,\r\n  Trash2,\r\n  Loader,\r\n  CheckCircle,\r\n} from \"lucide-react\";\r\n \r\ninterface FileWithPreview {\r\n  id: string;\r\n  preview: string;\r\n  progress: number;\r\n  name: string;\r\n  size: number;\r\n  type: string;\r\n  lastModified?: number;\r\n  file?: File;\r\n}\r\n \r\nexport default function FileUpload() {\r\n  const [files, setFiles] = useState<FileWithPreview[]>([]);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n \r\n  // Process dropped or selected files\r\n  const handleFiles = (fileList: FileList) => {\r\n    const newFiles = Array.from(fileList).map((file) => ({\r\n      id: `${URL.createObjectURL(file)}-${Date.now()}`,\r\n      preview: URL.createObjectURL(file),\r\n      progress: 0,\r\n      name: file.name,\r\n      size: file.size,\r\n      type: file.type,\r\n      lastModified: file.lastModified,\r\n      file,\r\n    }));\r\n    setFiles((prev) => [...prev, ...newFiles]);\r\n    newFiles.forEach((f) => simulateUpload(f.id));\r\n  };\r\n \r\n  // Simulate upload progress\r\n  const simulateUpload = (id: string) => {\r\n    let progress = 0;\r\n    const interval = setInterval(() => {\r\n      progress += Math.random() * 15;\r\n      setFiles((prev) =>\r\n        prev.map((f) =>\r\n          f.id === id ? { ...f, progress: Math.min(progress, 100) } : f,\r\n        ),\r\n      );\r\n      if (progress >= 100) {\r\n        clearInterval(interval);\r\n        if (navigator.vibrate) navigator.vibrate(100);\r\n      }\r\n    }, 300);\r\n  };\r\n \r\n  const onDrop = (e: DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n    handleFiles(e.dataTransfer.files);\r\n  };\r\n \r\n  const onDragOver = (e: DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(true);\r\n  };\r\n \r\n  const onDragLeave = () => setIsDragging(false);\r\n \r\n  const onSelect = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) handleFiles(e.target.files);\r\n  };\r\n \r\n  const formatFileSize = (bytes: number): string => {\r\n    if (!bytes) return \"0 Bytes\";\r\n    const k = 1024;\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return `${(bytes / Math.pow(k, i)).toFixed(2)} ${sizes[i]}`;\r\n  };\r\n \r\n  return (\r\n    <div className=\"w-full max-w-3xl mx-auto p-4 md:p-6\">\r\n      {/* Drop zone */}\r\n      <motion.div\r\n        onDragOver={onDragOver}\r\n        onDragLeave={onDragLeave}\r\n        onDrop={onDrop}\r\n        onClick={() => inputRef.current?.click()}\r\n        initial={false}\r\n        animate={{\r\n          borderColor: isDragging ? \"#3b82f6\" : \"#ffffff10\",\r\n          scale: isDragging ? 1.02 : 1,\r\n        }}\r\n        whileHover={{ scale: 1.01 }}\r\n        transition={{ duration: 0.2 }}\r\n        className={clsx(\r\n          \"relative rounded-2xl p-8 md:p-12 text-center cursor-pointer bg-secondary/50 border border-primary/10 shadow-sm hover:shadow-md backdrop-blur group\",\r\n          isDragging && \"ring-4 ring-blue-400/30 border-blue-500\",\r\n        )}\r\n      >\r\n        <div className=\"flex flex-col items-center gap-5\">\r\n          <motion.div\r\n            animate={{ y: isDragging ? [-5, 0, -5] : 0 }}\r\n            transition={{\r\n              duration: 1.5,\r\n              repeat: isDragging ? Infinity : 0,\r\n              ease: \"easeInOut\",\r\n            }}\r\n            className=\"relative\"\r\n          >\r\n            <motion.div\r\n              animate={{\r\n                opacity: isDragging ? [0.5, 1, 0.5] : 1,\r\n                scale: isDragging ? [0.95, 1.05, 0.95] : 1,\r\n              }}\r\n              transition={{\r\n                duration: 2,\r\n                repeat: isDragging ? Infinity : 0,\r\n                ease: \"easeInOut\",\r\n              }}\r\n              className=\"absolute -inset-4 bg-blue-400/10 rounded-full blur-md\"\r\n              style={{ display: isDragging ? \"block\" : \"none\" }}\r\n            />\r\n            <UploadCloud\r\n              className={clsx(\r\n                \"w-16 h-16 md:w-20 md:h-20 drop-shadow-sm\",\r\n                isDragging\r\n                  ? \"text-blue-500\"\r\n                  : \"text-zinc-700 dark:text-zinc-300 group-hover:text-blue-500 transition-colors duration-300\",\r\n              )}\r\n            />\r\n          </motion.div>\r\n \r\n          <div className=\"space-y-2\">\r\n            <h3 className=\"text-xl md:text-2xl font-semibold text-zinc-800 dark:text-zinc-100\">\r\n              {isDragging\r\n                ? \"Drop files here\"\r\n                : files.length\r\n                  ? \"Add more files\"\r\n                  : \"Upload your files\"}\r\n            </h3>\r\n            <p className=\"text-zinc-600 dark:text-zinc-300 md:text-lg max-w-md mx-auto\">\r\n              {isDragging ? (\r\n                <span className=\"font-medium text-blue-500\">\r\n                  Release to upload\r\n                </span>\r\n              ) : (\r\n                <>\r\n                  Drag & drop files here, or{\" \"}\r\n                  <span className=\"text-blue-500 font-medium\">browse</span>\r\n                </>\r\n              )}\r\n            </p>\r\n            <p className=\"text-sm text-zinc-500 dark:text-zinc-400\">\r\n              Supports images, documents, videos, and more\r\n            </p>\r\n          </div>\r\n \r\n          <input\r\n            ref={inputRef}\r\n            type=\"file\"\r\n            multiple\r\n            hidden\r\n            onChange={onSelect}\r\n            accept=\"image/*,application/pdf,video/*,audio/*,text/*,application/zip\"\r\n          />\r\n        </div>\r\n      </motion.div>\r\n \r\n      {/* Uploaded files list */}\r\n      <div className=\"mt-8\">\r\n        <AnimatePresence>\r\n          {files.length > 0 && (\r\n            <motion.div\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              className=\"flex justify-between items-center mb-3 px-2\"\r\n            >\r\n              <h3 className=\"font-semibold text-lg md:text-xl text-zinc-800 dark:text-zinc-200\">\r\n                Uploaded files ({files.length})\r\n              </h3>\r\n              {files.length > 1 && (\r\n                <button\r\n                  onClick={() => setFiles([])}\r\n                  className=\"text-sm font-medium px-3 py-1 bg-zinc-100 hover:bg-zinc-200 dark:bg-zinc-700 dark:hover:bg-zinc-600 rounded-md text-zinc-700 hover:text-red-600 dark:text-zinc-300 dark:hover:text-red-400 transition-colors duration-200\"\r\n                >\r\n                  Clear all\r\n                </button>\r\n              )}\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n \r\n        <div\r\n          className={clsx(\r\n            \"flex flex-col gap-3 overflow-y-auto pr-2\",\r\n            files.length > 3 &&\r\n              \"max-h-96 scrollbar-thin scrollbar-thumb-zinc-300 dark:scrollbar-thumb-zinc-600 scrollbar-track-transparent\",\r\n          )}\r\n        >\r\n          <AnimatePresence>\r\n            {files.map((file) => (\r\n              <motion.div\r\n                key={file.id}\r\n                initial={{ opacity: 0, y: 20, scale: 0.97 }}\r\n                animate={{ opacity: 1, y: 0, scale: 1 }}\r\n                exit={{ opacity: 0, y: -20, scale: 0.95 }}\r\n                transition={{ type: \"spring\", stiffness: 300, damping: 24 }}\r\n                className=\"px-4 py-4 flex items-start gap-4 rounded-xl bg-zinc-50 dark:bg-zinc-800/80 shadow hover:shadow-md transition-all duration-200\"\r\n              >\r\n                {/* Thumbnail */}\r\n                <div className=\"relative flex-shrink-0\">\r\n                  {file.type.startsWith(\"image/\") ? (\r\n                    <img\r\n                      src={file.preview}\r\n                      alt={file.name}\r\n                      className=\"w-16 h-16 md:w-20 md:h-20 rounded-lg object-cover border dark:border-zinc-700 shadow-sm\"\r\n                    />\r\n                  ) : file.type.startsWith(\"video/\") ? (\r\n                    <video\r\n                      src={file.preview}\r\n                      className=\"w-16 h-16 md:w-20 md:h-20 rounded-lg object-cover border dark:border-zinc-700 shadow-sm\"\r\n                      controls={false}\r\n                      muted\r\n                      loop\r\n                      playsInline\r\n                      preload=\"metadata\"\r\n                      poster=\"\" // You can add a preview frame if needed\r\n                    />\r\n                  ) : (\r\n                    <FileIcon className=\"w-16 h-16 md:w-20 md:h-20 text-zinc-400\" />\r\n                  )}\r\n                  {file.progress === 100 && (\r\n                    <motion.div\r\n                      initial={{ opacity: 0, scale: 0.5 }}\r\n                      animate={{ opacity: 1, scale: 1 }}\r\n                      className=\"absolute -right-2 -bottom-2 bg-white dark:bg-zinc-800 rounded-full shadow-sm\"\r\n                    >\r\n                      <CheckCircle className=\"w-5 h-5 text-emerald-500\" />\r\n                    </motion.div>\r\n                  )}\r\n                </div>\r\n \r\n                {/* File info & progress */}\r\n                <div className=\"flex-1 min-w-0\">\r\n                  <div className=\"flex flex-col gap-1 w-full\">\r\n                    {/* Filename */}\r\n                    <div className=\"flex items-center gap-2 min-w-0\">\r\n                      <FileIcon className=\"w-5 h-5 flex-shrink-0 text-blue-500 dark:text-blue-400\" />\r\n                      <h4\r\n                        className=\"font-medium text-base md:text-lg truncate text-zinc-800 dark:text-zinc-200\"\r\n                        title={file.name}\r\n                      >\r\n                        {file.name}\r\n                      </h4>\r\n                    </div>\r\n \r\n                    {/* Details & remove/loading */}\r\n                    <div className=\"flex items-center justify-between gap-3 text-sm text-zinc-500 dark:text-zinc-400\">\r\n                      <span className=\"text-xs md:text-sm\">\r\n                        {formatFileSize(file.size)}\r\n                      </span>\r\n                      <span className=\"flex items-center gap-1.5\">\r\n                        <span className=\"font-medium\">\r\n                          {Math.round(file.progress)}%\r\n                        </span>\r\n                        {file.progress < 100 ? (\r\n                          <Loader className=\"w-4 h-4 animate-spin text-blue-500\" />\r\n                        ) : (\r\n                          <Trash2\r\n                            className=\"w-4 h-4 cursor-pointer text-zinc-400 hover:text-red-500 dark:text-zinc-500 dark:hover:text-red-400 transition-colors duration-200\"\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              setFiles((prev) =>\r\n                                prev.filter((f) => f.id !== file.id),\r\n                              );\r\n                            }}\r\n                            aria-label=\"Remove file\"\r\n                          />\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n \r\n                  {/* Progress bar */}\r\n                  <div className=\"w-full h-2 bg-zinc-200 dark:bg-zinc-700 rounded-full overflow-hidden mt-3\">\r\n                    <motion.div\r\n                      initial={{ width: 0 }}\r\n                      animate={{ width: `${file.progress}%` }}\r\n                      transition={{\r\n                        duration: 0.4,\r\n                        type: \"spring\",\r\n                        stiffness: 100,\r\n                        ease: \"easeOut\",\r\n                      }}\r\n                      className={clsx(\r\n                        \"h-full rounded-full shadow-inner\",\r\n                        file.progress < 100 ? \"bg-blue-500\" : \"bg-emerald-500\",\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePresence>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}",
  "createdAt": "2025-06-12T15:48:24.370Z",
  "updatedAt": "2025-06-12T15:48:24.370Z"
}